{"version":3,"sources":["js/timer_class.js"],"names":["refs","clockFaceDays","document","querySelector","clockFaceHours","clockFaceMinutes","clockFaceSecond","clockFace","getElementById","CountdownTimer","selector","targetDate","setInterval","nowDate","Date","now","deltaTime","updateClockface","timeFinish","pad","Math","floor","textContent","value","String","padStart","clearInterval","setInt"],"mappings":";AA4CA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EA5CA,IAAMA,EAAO,CACRC,cAAeC,SAASC,cAAc,6BACtCC,eAAgBF,SAASC,cAAc,8BACvCE,iBAAkBH,SAASC,cAAc,6BACzCG,gBAAiBJ,SAASC,cAAc,6BACxCI,UAAWL,SAASM,eAAe,YAGlCC,EAAAA,WACkC,SAAA,EAAA,GAAA,IAAA,EAAA,KAAxBC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GAK7BC,EAAAA,KAAAA,SAAAA,YAAY,WACbC,IAAAA,EAAUC,KAAKC,MACfC,EAAY,EAAKL,WAAaE,EACpC,EAAKI,gBAAgBD,GACrB,EAAKE,WAAWF,IACf,MATIN,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAiCtB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,kBAvBE,MAAA,SAAgBK,GACRf,IAAAA,EAAgB,KAAKkB,IAAIC,KAAKC,MAAML,EAAa,QACjDZ,EAAiB,KAAKe,IAAIC,KAAKC,MAAOL,EAAa,MAAyB,OAC5EX,EAAmB,KAAKc,IAAIC,KAAKC,MAAOL,EAAa,KAAoB,MACzEV,EAAkB,KAAKa,IAAIC,KAAKC,MAAOL,EAAa,IAAc,MACxEhB,EAAKC,cAAcqB,YAAiBrB,GAAAA,OAAAA,GACpCD,EAAKI,eAAekB,YAAiBlB,GAAAA,OAAAA,GACrCJ,EAAKK,iBAAiBiB,YAAiBjB,GAAAA,OAAAA,GACvCL,EAAKM,gBAAgBgB,YAAiBhB,GAAAA,OAAAA,KAe1C,CAAA,IAAA,MAZE,MAAA,SAAIiB,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OAWrC,CAAA,IAAA,aARE,MAAA,SAAWF,GACLA,EAAQ,IACVG,cAAc,KAAKC,QACnB3B,EAAKO,UAAUe,YAAc,oBAKnC,EApCMb,GAoCN,IAAIA,EAAe,CACjBC,SAAU,WACVC,WAAY,IAAIG,KAAK","file":"timer_class.64e8dbe8.js","sourceRoot":"../src","sourcesContent":["const refs = {\n     clockFaceDays: document.querySelector('.value[data-value=\"days\"]'),\n     clockFaceHours: document.querySelector('.value[data-value=\"hours\"]'),\n     clockFaceMinutes: document.querySelector('.value[data-value=\"mins\"]'),\n     clockFaceSecond: document.querySelector('.value[data-value=\"secs\"]'),\n     clockFace: document.getElementById(\"timer-2\"),\n};\n\nclass CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n  }\n\n  setInt = setInterval(() => {\n    const nowDate = Date.now();\n    const deltaTime = this.targetDate - nowDate;\n    this.updateClockface(deltaTime);\n    this.timeFinish(deltaTime);\n  }, 1000);\n\n  updateClockface(deltaTime) {\n    const clockFaceDays = this.pad(Math.floor(deltaTime / (1000 * 60 * 60 * 24)));\n    const clockFaceHours = this.pad(Math.floor((deltaTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const clockFaceMinutes = this.pad(Math.floor((deltaTime % (1000 * 60 * 60)) / (1000 * 60)));\n    const clockFaceSecond = this.pad(Math.floor((deltaTime % (1000 * 60)) / 1000));\n    refs.clockFaceDays.textContent = `${clockFaceDays}`;\n    refs.clockFaceHours.textContent = `${clockFaceHours}`;\n    refs.clockFaceMinutes.textContent = `${clockFaceMinutes}`;\n    refs.clockFaceSecond.textContent = `${clockFaceSecond}`;\n  }\n\n  pad(value) {\n    return String(value).padStart(2, \"0\");\n  }\n\n  timeFinish(value) { //value - принимает значение deltaTime при вызове\n    if (value < 0) {\n      clearInterval(this.setInt);\n      refs.clockFace.textContent = \"Time expired\";\n    }\n  }\n};\n\nnew CountdownTimer({\n  selector: \"#timer-1\",\n  targetDate: new Date(\"September 18, 2022\"), \n});"]}