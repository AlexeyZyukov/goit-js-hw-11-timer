{"version":3,"sources":["js/timer.js"],"names":["clockFace","document","querySelector","clockFaceDays","clockFaceHours","clockFaceMinutes","clockFaceSecond","intervalId","timerCount","setInterval","countDown","endDate","deltaTime","Date","getTime","now","textContent","pad","Math","floor","value","String","padStart"],"mappings":";AAAA,aAEA,IAAMA,EAAYC,SAASC,cAAc,YACnCC,EAAgBF,SAASC,cAAc,2BACvCE,EAAiBH,SAASC,cAAc,4BACxCG,EAAmBJ,SAASC,cAAc,2BAC1CI,EAAkBL,SAASC,cAAc,2BACzCK,EAAa,KAKnB,SAASC,IACLC,YAAaC,EAAY,KAG7B,SAASA,IACKC,IAEAC,EAFU,IAAIC,KAAK,4BAA4BC,UACjCD,KAAKE,MAG7BZ,EAAca,YAAcC,EAAIC,KAAKC,MAAMP,EAAa,QACxDR,EAAeY,YAAcC,EAAIC,KAAKC,MAAOP,EAAa,MAAyB,OACnFP,EAAiBW,YAAcC,EAAIC,KAAKC,MAAOP,EAAa,KAAoB,MAChFN,EAAgBU,YAAcC,EAAIC,KAAKC,MAAOP,EAAa,IAAc,MAO7E,SAASK,EAAIG,GACFC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAErCd","file":"timer.05ee46c5.js","sourceRoot":"../src","sourcesContent":["\"use strict\"\n\nconst clockFace = document.querySelector(\"#timer-1\");\nconst clockFaceDays = document.querySelector('span[data-value=\"days\"]');\nconst clockFaceHours = document.querySelector('span[data-value=\"hours\"]');\nconst clockFaceMinutes = document.querySelector('span[data-value=\"mins\"]');\nconst clockFaceSecond = document.querySelector('span[data-value=\"secs\"]');\nconst intervalId = null;\n\n//console.log(clockFaceDays);\n\n\nfunction timerCount() {\n    setInterval((countDown), 1000);\n};\n\nfunction countDown() {\n        const endDate = new Date(\"August 18, 2022 00:00:00\").getTime();\n        const currentDate = Date.now();\n        const deltaTime = endDate - currentDate;\n    //console.log(deltaTime);\n    clockFaceDays.textContent = pad(Math.floor(deltaTime / (1000 * 60 * 60 * 24)));\n    clockFaceHours.textContent = pad(Math.floor((deltaTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    clockFaceMinutes.textContent = pad(Math.floor((deltaTime % (1000 * 60 * 60)) / (1000 * 60)));\n    clockFaceSecond.textContent = pad(Math.floor((deltaTime % (1000 * 60)) / 1000));\n    //console.log( 'clockFaceDays', clockFaceDays);\n    //console.log('clockFaceHours', clockFaceHours);\n    //console.log('clockFaceMinutes', clockFaceMinutes);\n    //console.log('clockFaceSecond', clockFaceSecond);\n};\n\nfunction pad(value) {\n    return String(value).padStart(2, '0');\n  }\ntimerCount();\n\n// const timer = {\n//     intervalId: null,\n\n//     countDown() {\n//         const endDate = new Date(\"August 15, 2022 14:00:00\").getTime();\n//         const currentDate = Date.now();\n//         const deltaTime = endDate - currentDate;\n//         console.log(deltaTime);\n//     }\n// };\n//==================================================================\n//вариант коллеги\n// const refs = {\n//      clockFaceDays: document.querySelector('.value[data-value=\"days\"]'),\n//      clockFaceHours : document.querySelector('.value[data-value=\"hours\"]'),\n//      clockFaceMinutes : document.querySelector('.value[data-value=\"mins\"]'),\n//      clockFaceSecond : document.querySelector('.value[data-value=\"secs\"]'),\n//      clockFace : document.getElementById(\"timer-1\"),\n//   };\n//   class CountdownTimer {\n//     constructor({ selector, targetDate }) {\n//       this.selector = selector;\n//       this.targetDate = targetDate;\n//     }\n//     setInt = setInterval(() => {\n//       const nowDate = Date.now();\n//       const time = this.targetDate - nowDate;\n//       this.updateClockface(time);\n//       this.timeFinish(time);\n//     }, 1000);\n//     updateClockface(time) {\n//       const clockFaceDays = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n//       const clockFaceHours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n//       const clockFaceMinutes = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n//       const clockFaceSecond = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n//       refs.clockFaceDays.textContent = `${clockFaceDays}`;\n//       refs.clockFaceHours.textContent = `${clockFaceHours}`;\n//       refs.clockFaceMinutes.textContent = `${clockFaceMinutes}`;\n//       refs.clockFaceSecond.textContent = `${clockFaceSecond}`;\n//     }\n//     pad(value) {\n//       return String(value).padStart(2, \"0\");\n//     }\n//     timeFinish(time) {\n//       if (time < 0) {\n//         clearInterval(this.setInt);\n//         refs. clockFace .textContent = \"Finish\";\n//       }\n//     }\n//   };\n//   new CountdownTimer({\n//     selector: \"#timer-1\",\n//     targetDate: new Date(\"August 18, 2021\"),\n//   });\n\n//======================================================\n\n// const days = Math.floor(time / (1000 * 60 * 60 * 24));\n// const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n// const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n// const secs = Math.floor((time % (1000 * 60)) / 1000);\n//     this.secRef.textContent = secs < 10 ? `0${secs}` : secs;\n//     this.minRef.textContent = mins < 10 ? `0${mins}`: mins;\n//     this.hourRef.textContent = hours < 10 ? `0${hours}` : hours;\n//     this.dayRef.textContent = days < 10 ? `0${days}` : days;"]}